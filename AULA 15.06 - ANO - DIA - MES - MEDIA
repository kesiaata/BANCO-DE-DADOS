USE cartoes;
--Mostre todos os dados da tabela clientes ordenados por nome.
SELECT * FROM tab_clientes ORDER BY nome ASC;

--Mostre todos os dados da tabela clientes ordenados por nome em ordem decrescente.
SELECT * FROM tab_clientes ORDER BY nome DESC;

--Mostre o nome e saldo de cada cliente e suas contas.
SELECT nome, saldo FROM tab_clientes
INNER JOIN tab_contas ON tab_clientes.id_cliente = tab_contas.id_cliente;

--Mostre o nome e saldo de cada cliente somente da conta corrente.
SELECT nome, saldo FROM tab_clientes
INNER JOIN tab_contas ON tab_clientes.id_cliente = tab_contas.id_cliente
WHERE tipo = 'corrente';

--Mostre o nome e saldo de cada cliente somente da conta poupança.
SELECT nome, saldo FROM tab_clientes
INNER JOIN tab_contas ON tab_clientes.id_cliente = tab_contas.id_cliente
WHERE tipo = 'poupança';

--Mostre a soma do total de conta corrente de todos os clientes.
SELECT SUM(saldo) AS 'Total de conta corrente'
FROM tab_contas WHERE tipo = 'corrente';

--Mostre a soma do total de conta poupanca de todos os clientes.
SELECT SUM(saldo) AS 'Total de conta poupança'
FROM tab_contas WHERE tipo = 'poupança';

--Mostre a soma do total de todas as contas de todos os clientes.
SELECT SUM(saldo) AS 'Total de conta poupança'
FROM tab_contas;

--Mostre nome e o saldo de conta poupanca de cada cliente convertido em dólar.
SELECT nome, (saldo / 5.10) AS 'Saldo da poupança convertido em dólar' FROM tab_clientes
INNER JOIN tab_contasON tab_clientes.id_cliente = tab_contas.id_cliente
WHERE tab_contas.tipo = 'poupança';

--Mostre nome e o saldo de conta poupanca de cada cliente convertido em euro.
SELECT nome, (saldo / 5.30) AS 'Saldo da poupança convertido em euro' FROM tab_clientes
INNER JOIN tab_contasON tab_clientes.id_cliente = tab_contas.id_cliente
WHERE tab_contas.tipo = 'poupança';

--Mostre os 3 clientes com maior saldo de conta corrente.
SELECT TOP 3 nome, saldo FROM tab_clientes
INNER JOIN tab_contas ON tab_clientes.id_cliente = tab_contas.id_cliente
WHERE tab_contas.tipo = 'corrente' ORDER BY tab_contas.saldo DESC;

--Mostre os 3 clientes com menor saldo de conta corrente.
SELECT TOP 3 nome, saldo FROM tab_clientes
INNER JOIN tab_contas ON tab_clientes.id_cliente = tab_contas.id_cliente
WHERE tab_contas.tipo = 'corrente' ORDER BY tab_contas.saldo ASC;




--**********************************************


CREATE DATABASE pessoas;
USE pessoas;
CREATE TABLE tab_pessoas(
	id_pessoa INT NOT NULL PRIMARY KEY IDENTITY,
	nome VARCHAR(50) NOT NULL,
	dt_nasc DATE NOT NULL,
	peso FLOAT(2) NOT NULL,
	altura FLOAT(2) NOT NULL,
	estado VARCHAR(2) NOT NULL
);
INSERT INTO tab_pessoas(nome, dt_nasc, peso, altura, estado) VALUES
('João',	'1980-10-10',		80, 1.80, 'SP'),
('Maria',	'1985-08-05',		74, 1.68, 'SP'),
('Simone',	'1988-02-13',		78, 1.78, 'RJ'),
('Karen',	'1990-05-24',		65, 1.70, 'MG'),
('Tereza',	'1991-07-19',		60, 1.78, 'MS'),
('Pedro',	'1970-04-10',		90, 1.90, 'SP'),
('Alex',	'1978-08-15',		80, 1.88, 'SP'),
('Jorge',	'1998-12-03',		85, 1.89, 'MG'),
('Giovanni', '1992-03-14',		88, 1.80, 'MT'),
('Beatriz',	'1987-10-29',		58, 1.70, 'MS'),
('Carol',	'1986-09-17',		59, 1.68, 'PE'),
('Gabriela', '1980-08-08',		55, 1.58, 'CE'),
('Fernanda', '1981-01-11',		60, 1.60, 'RJ'),
('Cristiane', '1979-06-17',		67, 1.70, 'MG'),
('Miguel',	'1991-06-06',		87, 1.90, 'SP');

-- Mostre o ano atual.
SELECT YEAR(GETDATE());
-- Mostre o mês atual
SELECT MONTH(GETDATE());
-- Mostre o dia atual
SELECT DAY(GETDATE());
-- Mostre a data completa atual
SELECT CONCAT(DAY(GETDATE()),'/',
              MONTH(GETDATE()), '/', 
			  YEAR(GETDATE())) AS 'Data atual';

-- Mostre a idade de cada pessoa.
SELECT nome, (YEAR(GETDATE()) - YEAR(dt_nasc)) AS Idade
FROM tab_pessoas;

-- Mostre a média de idade de todas as pessoas.
SELECT AVG((YEAR(GETDATE()) - YEAR(dt_nasc))) AS 'Média das idades'
FROM tab_pessoas;

-- Mostre somente as pessoas que tem idade superior à média.
SELECT YEAR(GETDATE()) - YEAR(dt_nasc) AS Idade
FROM tab_pessoas
WHERE YEAR(GETDATE()) - YEAR(dt_nasc) > 
	(SELECT AVG(YEAR(GETDATE()) - YEAR(dt_nasc)) AS idade
		FROM tab_pessoas
);
