USE fluxocaixa;

--Vamos criar uma trigger para atualizar a tabela caixa a cada venda feita.
CREATE TRIGGER tgr_VendaInserida 
	ON tab_vendas FOR INSERT AS BEGIN 
	DECLARE @var_valor DECIMAL(10,2),
		@var_data DATE
	SELECT  @var_data = data, @var_valor = valor FROM INSERTED
	UPDATE tab_caixa SET saldo_final = saldo_final + @var_valor 
	WHERE data = @var_data END;


--Select nas tabelas.
SELECT *FROM tab_caixa;
SELECT *FROM tab_vendas;


--Vamos inserir uma venda.
INSERT INTO tab_vendas(data, valor) VALUES
	('2022-08-02', 50);
INSERT INTO tab_vendas(data, valor) VALUES
	('2022-08-02', 1272);
INSERT INTO tab_vendas(data, valor) VALUES
	('2022-08-02', 1000);


--Vamos criar uma trigger para atualizar a tabela caixa a cada venda excluída.
CREATE TRIGGER tgr_VendaExcluida
	ON tab_vendas FOR DELETE AS BEGIN
	DECLARE @var_valor DECIMAL(10,2),
		@var_data DATE
	SELECT  @var_data = data, @var_valor = valor FROM DELETED
	UPDATE tab_caixa SET saldo_final = saldo_final - @var_valor
	WHERE data = @var_data END;
	
	

--Select nas tabelas.
SELECT *FROM tab_caixa;
SELECT *FROM tab_vendas;


--Vamos excluír uma venda.
DELETE FROM tab_vendas WHERE id_venda = 1;
DELETE FROM tab_vendas WHERE id_venda = 3;


--Para visualizar as triggers do sistema.
SELECT *FROM sys.triggers;


-----------------------------------------------------------------------------------------------------------------------------------------------

--*******Funções Internas******
--DATEDIFF (diferenças entre datas, o periodo entre elas)
--Diferenças entre datas

SELECT DATEDIFF(DAY,'2022-01-01', '2022-05-05') AS 'Dia(s)';
SELECT DATEDIFF(MONTH,'2022-01-01', '2022-05-05') AS 'Mês(es)';
SELECT DATEDIFF(YEAR,'2020-01-01', '2022-05-05') AS 'Ano(s)';


--Mostrar a data do sistema.
SELECT GETDATE();


--Extração de parte da data.
SELECT DATEPART(DAY, '2020-02-12') AS 'Dia';
SELECT DATEPART(MONTH, '2020-02-12') AS 'Mês';
SELECT DATEPART(YEAR, '2020-02-12') AS 'Ano';


--Adicionar um período a uma data.
SELECT DATEADD(DAY, 1, '20220508');
SELECT DATEADD(MONTH, 1, '20220508');
SELECT DATEADD(YEAR, 1, '20220508');


--Retorna parte de uma string.
SELECT SUBSTRING('Banana', 4, 3);


--Retorna o tamanho de uma string.
SELECT LEN('Paralelepípedo');
SELECT LEN('kesiatamiresdasilvasousa');


--Faz a contagem de registros de uma coluna.
USE escola;
SELECT COUNT(id_aluno) AS 'Quantidade de Alunos' FROM tab_alunos;
SELECT COUNT(nome) AS 'Quantidade de Alunos' FROM tab_alunos;
SELECT COUNT(nome) AS 'Quantidade de Alunos' FROM tab_alunos WHERE email LIKE '%gmail%';


--Retorne o valor médio de uma coluna.
SELECT AVG(salario) AS 'Média dos Salários' FROM tab_professores;


--Retorna o maior valor de uma coluna.
SELECT MAX(salario) AS 'Maior Salário' FROM tab_professores;


--Retorna o menor valor de uma coluna.
SELECT MIN(salario) AS 'Menor Salário' FROM tab_professores;


--Retorna a soma de uma coluna.
SELECT SUM(salario) AS 'Total de Salários' FROM tab_professores;


--Converter uma string para minúscula.
SELECT LOWER(nome) FROM tab_alunos;


--Converter uma string para maiúsculo.
SELECT UPPER(nome) FROM tab_alunos;


--Remove espaços em branco à esquerda de uma string.
DECLARE @nome VARCHAR(20) SET @nome = ' Fabio ' 
SELECT LTRIM(@nome);

--Remove espaços em branco à direita de uma string.
DECLARE @nome2 VARCHAR(20) SET @nome2 = ' Fabio ' 
SELECT RTRIM(@nome2);


------------------------------------------------------------------------------------------------------------------------------------------

--Funções Personalizadas.
--Remover espaços de uma string.

CREATE FUNCTION TiraEspaco(@texto VARCHAR(50))
RETURNS VARCHAR(50) AS BEGIN RETURN(LTRIM(RTRIM(@texto))) END;


--Chamando a função.
SELECT dbo.TiraEspaco(' Senac Vila Prudente ');


--Para remover uma function.
DROP FUNCTION TiraEspaco;


--Funçõ para fazer uma subtração.
CREATE FUNCTION Subtracao(
	@num1 AS INT,
	@num2 AS INT)
RETURNS INT AS BEGIN DECLARE @calc AS INT SET @calc = @num1 - @num2 RETURN @calc END;


--Chamando a função.
SELECT dbo.Subtracao(50,10);



----------------------------------------------------------------------------------------------------------------------------------

			DOWLOAND XAMPP(MYSQL) apachefriends.org


					***USANDO O MYSQL***
					
CREATE DATABASE t18;  execulta

USE t18;
CREATE TABLE tab_alunos(
	id_aluno INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    	nome VARCHAR(50) NOT NULL,
    	email VARCHAR(50) NOT NULL,
    	fone VARCHAR(15) NOT NULL
);
CREATE TABLE tab_professores(
	id_professor INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    	nome VARCHAR(50) NOT NULL,
    	email VARCHAR(50) NOT NULL,
    	fone VARCHAR(15) NOT NULL,
    	foto VARCHAR(50) NOT NULL,
    	salario DECIMAL(10,2) NOT NULL
);
CREATE TABLE tab_turmas(
	id_turma INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    	nome VARCHAR(50) NOT NULL,
    	id_aluno INT NOT NULL,
    	id_professor INT NOT NULL,
    	id_sala INT NOT NULL,
CONSTRAINT fk_id_aluno FOREIGN KEY(id_aluno) REFERENCES tab_aluno(id_aluno),
CONSTRAINT fk_id_professor FOREIGN KEY(id_professor) REFERENCES tab_professores(id_professor),
CONSTRAINT fk_id_sala FOREIGN KEY(id_sala) REFERENCES tab_salas(id_sala)
);
INSERT INTO tab_alunos(nome, email, fone) VALUES 
('João', 'joão@gmail.com', '(11) 91234-5678');




